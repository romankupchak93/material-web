{"version":3,"file":"checkbox_test.js","sourceRoot":"","sources":["checkbox_test.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright 2019 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {html} from 'lit';\n\nimport {Environment} from '../../testing/environment.js';\nimport {CheckboxHarness} from '../harness.js';\n\nimport {Checkbox} from './checkbox.js';\n\ncustomElements.define('md-test-checkbox', Checkbox);\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'md-test-checkbox': Checkbox;\n  }\n}\n\ndescribe('checkbox', () => {\n  const env = new Environment();\n\n  async function setupTest(\n      template = html`<md-test-checkbox></md-test-checkbox>`) {\n    const element = env.render(template).querySelector('md-test-checkbox');\n    if (!element) {\n      throw new Error('Could not query rendered <md-test-checkbox>.');\n    }\n\n    await env.waitForStability();\n    const input = element.renderRoot.querySelector('input');\n    if (!input) {\n      throw new Error('Could not query rendered <input>.');\n    }\n\n    const focusRing = element.renderRoot.querySelector('md-focus-ring');\n    if (!focusRing) {\n      throw new Error('Could not query rendered <md-focus-ring>.');\n    }\n\n    return {\n      input,\n      focusRing,\n      harness: new CheckboxHarness(element),\n    };\n  }\n\n  describe('basic', () => {\n    it('initializes as an checkbox', async () => {\n      const {harness} = await setupTest();\n      expect(harness.element).toBeInstanceOf(Checkbox);\n      expect(harness.element.checked).toEqual(false);\n      expect(harness.element.indeterminate).toEqual(false);\n      expect(harness.element.disabled).toEqual(false);\n      expect(harness.element.error).toEqual(false);\n      expect(harness.element.value).toEqual('on');\n    });\n\n    it('user input updates checked state', async () => {\n      const {harness} = await setupTest();\n      await harness.clickWithMouse();\n      await env.waitForStability();\n      expect(harness.element.checked).toEqual(true);\n    });\n\n    it('should trigger changed event when checkbox is selected', async () => {\n      const {harness} = await setupTest();\n      const changeHandler = jasmine.createSpy('changeHandler');\n      harness.element.addEventListener('change', changeHandler);\n\n      await harness.clickWithMouse();\n\n      expect(harness.element.checked).toBeTrue();\n      expect(changeHandler).toHaveBeenCalledTimes(1);\n      expect(changeHandler).toHaveBeenCalledWith(jasmine.any(Event));\n    });\n  });\n\n  describe('checked', () => {\n    it('get/set updates the checked property on the native checkbox element',\n       async () => {\n         const {harness, input} = await setupTest();\n         harness.element.checked = true;\n         await env.waitForStability();\n         expect(input.checked).toEqual(true);\n         harness.element.checked = false;\n         await env.waitForStability();\n         expect(input.checked).toEqual(false);\n       });\n\n    it('get/set updates the checked property after user updates checked state',\n       async () => {\n         const {harness, input} = await setupTest();\n\n         // Simulate user interaction setting checked to true.\n         await harness.clickWithMouse();\n         await env.waitForStability();\n         expect(input.checked).toEqual(true);\n         expect(harness.element.checked).toEqual(true);\n\n         // Set custom element checked to false.\n         harness.element.checked = false;\n         await env.waitForStability();\n         expect(input.checked).toEqual(false);\n         expect(harness.element.checked).toEqual(false);\n\n         // Set custom element checked to true.\n         harness.element.checked = true;\n         await env.waitForStability();\n         expect(input.checked).toEqual(true);\n         expect(harness.element.checked).toEqual(true);\n       });\n  });\n\n  describe('indeterminate', () => {\n    it('get/set updates the indeterminate property on the native checkbox element',\n       async () => {\n         const {harness, input} = await setupTest();\n         harness.element.indeterminate = true;\n         await env.waitForStability();\n\n         expect(input.indeterminate).toEqual(true);\n         expect(input.getAttribute('aria-checked')).toEqual('mixed');\n\n         harness.element.indeterminate = false;\n         await env.waitForStability();\n\n         expect(input.indeterminate).toEqual(false);\n         expect(input.getAttribute('aria-checked')).not.toEqual('mixed');\n       });\n  });\n\n  describe('disabled', () => {\n    it('get/set updates the disabled property on the native checkbox element',\n       async () => {\n         const {harness, input} = await setupTest();\n         harness.element.disabled = true;\n         await env.waitForStability();\n\n         expect(input.disabled).toEqual(true);\n         harness.element.disabled = false;\n         await env.waitForStability();\n         expect(input.disabled).toEqual(false);\n       });\n  });\n\n  describe('form submission', () => {\n    async function setupFormTest(propsInit: Partial<Checkbox> = {}) {\n      return await setupTest(html`\n        <form>\n          <md-test-checkbox\n           .checked=${propsInit.checked === true}\n           .disabled=${propsInit.disabled === true}\n           .name=${propsInit.name ?? ''}\n           .value=${propsInit.value ?? ''}\n          ></md-test-checkbox>\n        </form>`);\n    }\n\n    it('does not submit if not checked', async () => {\n      const {harness} = await setupFormTest({name: 'foo'});\n      const formData = await harness.submitForm();\n      expect(formData.get('foo')).toBeNull();\n    });\n\n    it('does not submit if disabled', async () => {\n      const {harness} =\n          await setupFormTest({name: 'foo', checked: true, disabled: true});\n      const formData = await harness.submitForm();\n      expect(formData.get('foo')).toBeNull();\n    });\n\n    it('does not submit if name is not provided', async () => {\n      const {harness} = await setupFormTest({checked: true});\n      const formData = await harness.submitForm();\n      const keys = Array.from(formData.keys());\n      expect(keys.length).toEqual(0);\n    });\n\n    it('submits under correct conditions', async () => {\n      const {harness} =\n          await setupFormTest({name: 'foo', checked: true, value: 'bar'});\n      const formData = await harness.submitForm();\n      expect(formData.get('foo')).toEqual('bar');\n    });\n  });\n\n  describe('label activation', () => {\n    async function setupLabelTest() {\n      const test = await setupTest(html`\n          <label>\n            <md-test-checkbox></md-test-checkbox>\n          </label>\n        `);\n      const label = (test.harness.element.getRootNode() as HTMLElement)\n                        .querySelector<HTMLLabelElement>('label')!;\n      return {...test, label};\n    }\n\n    it('toggles when label is clicked', async () => {\n      const {harness: {element}, label} = await setupLabelTest();\n      label.click();\n      await env.waitForStability();\n      expect(element.checked).toBeTrue();\n      label.click();\n      await env.waitForStability();\n      expect(element.checked).toBeFalse();\n    });\n  });\n\n  describe('focus ring', () => {\n    it('hidden on non-keyboard focus', async () => {\n      const {harness, focusRing} = await setupTest();\n      await harness.clickWithMouse();\n      expect(focusRing.visible).toBeFalse();\n    });\n\n    it('visible on keyboard focus and hides on blur', async () => {\n      const {harness, focusRing} = await setupTest();\n      await harness.focusWithKeyboard();\n      expect(focusRing.visible).toBeTrue();\n      await harness.blur();\n      expect(focusRing.visible).toBeFalse();\n    });\n\n    it('hidden after pointer interaction', async () => {\n      const {harness, focusRing} = await setupTest();\n      await harness.focusWithKeyboard();\n      expect(focusRing.visible).toBeTrue();\n      await harness.clickWithMouse();\n      expect(focusRing.visible).toBeFalse();\n    });\n  });\n});\n"]}