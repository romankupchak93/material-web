{"version":3,"file":"observer-foundation_test.js","sourceRoot":"","sources":["observer-foundation_test.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright 2021 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\n// import 'jasmine'; (google3-only)\n\nimport {ObserverRecord} from './observer.js';\nimport {ObserverFoundation} from './observer-foundation.js';\n\ndescribe('ObserverFoundation', () => {\n  class TestObserverFoundation extends ObserverFoundation<{}> {\n    override observe<T extends object>(\n        target: T, observers: ObserverRecord<T, this>) {\n      return super.observe(target, observers);\n    }\n  }\n\n  let instance!: TestObserverFoundation;\n  const initialState = {stringProp: 'value', numberProp: 0};\n  let state = {...initialState};\n  const stringObserver = jasmine.createSpy('stringObserver');\n  const numberObserver = jasmine.createSpy('numberObserver');\n\n  beforeEach(() => {\n    instance = new TestObserverFoundation({});\n    state = {...initialState};\n    stringObserver.and.stub();\n    stringObserver.calls.reset();\n    numberObserver.and.stub();\n    numberObserver.calls.reset();\n  });\n\n  it('#observe() should listen to multiple properties', () => {\n    instance.observe(state, {\n      stringProp: stringObserver,\n      numberProp: numberObserver,\n    });\n\n    state.stringProp = 'newValue';\n    state.numberProp = 1;\n    expect(stringObserver)\n        .toHaveBeenCalledOnceWith(state.stringProp, initialState.stringProp);\n    expect(numberObserver)\n        .toHaveBeenCalledOnceWith(state.numberProp, initialState.numberProp);\n  });\n\n  it('#observe() should call Observers with instance as `this`', () => {\n    let observerThis: unknown;\n    stringObserver.and.callFake(function(this: unknown) {\n      observerThis = this;\n    });\n\n    instance.observe(state, {\n      stringProp: stringObserver,\n    });\n\n    state.stringProp = 'newValue';\n    expect(observerThis)\n        .withContext('observer `this` should be instance')\n        .toBe(instance);\n  });\n\n  it('#observe() cleanup function stops Observers', () => {\n    const unobserve = instance.observe(\n        state, {stringProp: stringObserver, numberProp: numberObserver});\n\n    state.stringProp = 'newValue';\n    state.numberProp = 1;\n    stringObserver.calls.reset();\n    numberObserver.calls.reset();\n    unobserve();\n    state.stringProp = 'anotherValue';\n    state.numberProp = 2;\n    expect(stringObserver).not.toHaveBeenCalled();\n    expect(numberObserver).not.toHaveBeenCalled();\n  });\n\n  it('#observe() cleanup function does not stop Observers from other invocations',\n     () => {\n       const otherStringObserver = jasmine.createSpy('otherStringObserver');\n       const unobserve = instance.observe(\n           state, {stringProp: stringObserver, numberProp: numberObserver});\n\n       instance.observe(state, {stringProp: otherStringObserver});\n\n       state.stringProp = 'newValue';\n       state.numberProp = 1;\n       unobserve();\n       state.stringProp = 'anotherValue';\n       state.numberProp = 2;\n       expect(otherStringObserver).toHaveBeenCalledTimes(2);\n     });\n});\n"]}