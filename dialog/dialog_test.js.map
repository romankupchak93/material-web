{"version":3,"file":"dialog_test.js","sourceRoot":"","sources":["dialog_test.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright 2023 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {html} from 'lit';\n\nimport {Environment} from '../testing/environment.js';\nimport {createTokenTests} from '../testing/tokens.js';\n\nimport {MdDialog} from './dialog.js';\nimport {DialogHarness} from './harness.js';\n\nfunction isDocumentScrollingDisabled() {\n  return getComputedStyle(document.body).overflow === 'hidden';\n}\n\ninterface DialogTestProps {\n  modeless?: boolean;\n}\n\nfunction getDialogTemplate(props?: DialogTestProps) {\n  return html`\n    <md-dialog\n      .modeless=${props?.modeless ?? false}\n      style=\"\n        --md-dialog-opening-transition-duration: 0ms;\n        --md-dialog-closing-transition-duration: 0ms;\n      \">\n      <div class=\"content\">Content\n        <input dialogFocus>\n      </div>\n      <button slot=\"footer\" dialogAction=\"button\">Close</button>\n    </md-dialog>`;\n}\n\n\ndescribe('<md-dialog>', () => {\n  const realTimeout = globalThis.setTimeout;\n  const env = new Environment();\n\n  function setClockEnabled(enable = false) {\n    const isEnabled = globalThis.setTimeout !== realTimeout;\n    if (isEnabled !== enable) {\n      if (enable) {\n        jasmine.clock().install();\n      } else {\n        jasmine.clock().uninstall();\n      }\n    }\n  }\n\n\n  async function setupTest(\n      props?: DialogTestProps, template = getDialogTemplate) {\n    const root = env.render(template(props));\n    await env.waitForStability();\n    setClockEnabled(false);\n    const dialog = root.querySelector<MdDialog>('md-dialog')!;\n    const harness = new DialogHarness(dialog);\n    const contentElement = root.querySelector<HTMLElement>('.content')!;\n    const focusElement = root.querySelector<HTMLElement>('[dialogFocus]')!;\n    return {harness, root, contentElement, focusElement};\n  }\n\n\n  afterEach(() => {\n    setClockEnabled(true);\n  });\n\n  describe('.styles', () => {\n    createTokenTests(MdDialog.styles);\n  });\n\n  describe('basic', () => {\n    it('initializes as an md-dialog', async () => {\n      const {harness} = await setupTest();\n      expect(harness.element).toBeInstanceOf(MdDialog);\n      expect(await harness.getInteractiveElement())\n          .toBeInstanceOf(HTMLDialogElement);\n    });\n\n    it('renders open state by setting open property', async () => {\n      const {harness} = await setupTest();\n      expect(await harness.isDialogVisible()).toBeFalse();\n      harness.element.open = true;\n      expect(await harness.isDialogVisible()).toBeTrue();\n\n      harness.element.open = false;\n      expect(await harness.isDialogVisible()).toBeFalse();\n      harness.element.open = true;\n      expect(await harness.isDialogVisible()).toBeTrue();\n      harness.element.open = false;\n      expect(await harness.isDialogVisible()).toBeFalse();\n    });\n\n    it('renders open state by calling show()/close()/toggleShow()',\n       async () => {\n         const {harness} = await setupTest();\n         harness.element.show();\n         expect(await harness.isDialogVisible()).toBeTrue();\n         harness.element.close();\n         expect(await harness.isDialogVisible()).toBeFalse();\n         harness.element.toggleShow();\n         expect(await harness.isDialogVisible()).toBeTrue();\n         harness.element.toggleShow();\n         expect(await harness.isDialogVisible()).toBeFalse();\n       });\n\n    it('renders scrim', async () => {\n      const {harness} = await setupTest();\n      expect(await harness.isScrimVisible()).toBeFalse();\n      harness.element.open = true;\n      expect(await harness.isScrimVisible()).toBeTrue();\n      harness.element.open = false;\n      expect(await harness.isScrimVisible()).toBeFalse();\n    });\n\n    it('prevents document scrolling when open', async () => {\n      const {harness} = await setupTest();\n      expect(isDocumentScrollingDisabled()).toBeFalse();\n      harness.element.open = true;\n      await harness.transitionComplete();\n      expect(isDocumentScrollingDisabled()).toBeTrue();\n      harness.element.open = false;\n      await harness.transitionComplete();\n      expect(isDocumentScrollingDisabled()).toBeFalse();\n    });\n\n    it('fires open/close events', async () => {\n      const {harness} = await setupTest();\n      const openingHandler = jasmine.createSpy('openingHandler');\n      const openedHandler = jasmine.createSpy('openedHandler');\n      const closingHandler = jasmine.createSpy('closingHandler');\n      const closedHandler = jasmine.createSpy('closedHandler');\n      harness.element.addEventListener('opening', openingHandler);\n      harness.element.addEventListener('opened', openedHandler);\n      harness.element.addEventListener('closing', closingHandler);\n      harness.element.addEventListener('closed', closedHandler);\n      harness.element.show();\n      await harness.transitionComplete();\n      expect(openingHandler).toHaveBeenCalledTimes(1);\n      expect(openedHandler).toHaveBeenCalledTimes(1);\n      expect(closingHandler).toHaveBeenCalledTimes(0);\n      expect(closedHandler).toHaveBeenCalledTimes(0);\n      harness.element.close('testing');\n      await harness.transitionComplete();\n      expect(openingHandler).toHaveBeenCalledTimes(1);\n      expect(openedHandler).toHaveBeenCalledTimes(1);\n      expect(closingHandler).toHaveBeenCalledTimes(1);\n      expect(closingHandler.calls.mostRecent().args[0].detail.action)\n          .toBe('testing');\n      expect(closedHandler).toHaveBeenCalledTimes(1);\n      expect(closedHandler.calls.mostRecent().args[0].detail.action)\n          .toBe('testing');\n    });\n\n    it('closes when element with action is clicked', async () => {\n      const {harness} = await setupTest();\n      harness.element.show();\n      await harness.transitionComplete();\n      const closedHandler = jasmine.createSpy('closedHandler');\n      harness.element.addEventListener('closed', closedHandler);\n      harness.element\n          .querySelector<HTMLButtonElement>('[dialogAction=\"button\"]')!.click();\n      await harness.transitionComplete();\n      expect(harness.element.open).toBeFalse();\n      expect(closedHandler.calls.mostRecent().args[0].detail.action)\n          .toBe('button');\n    });\n\n    it('closes with click outside dialog', async () => {\n      const {harness, contentElement} = await setupTest();\n      harness.element.show();\n      contentElement.click();\n      await harness.transitionComplete();\n      expect(harness.element.open).toBeTrue();\n      const dialogElement = await harness.getInteractiveElement();\n      dialogElement.click();\n      await harness.transitionComplete();\n      expect(harness.element.open).toBeFalse();\n    });\n\n    it('focses element with focus attribute when shown and previously focused element when closed',\n       async () => {\n         const {harness, focusElement} = await setupTest();\n         const button = document.createElement('button');\n         document.body.append(button);\n         button.focus();\n         expect(document.activeElement).toBe(button);\n         harness.element.show();\n         await harness.transitionComplete();\n         expect(document.activeElement).toBe(focusElement);\n         harness.element.close();\n         await harness.transitionComplete();\n         expect(document.activeElement).toBe(button);\n         button.remove();\n       });\n\n    describe('modeless', () => {\n      it('does not render srcrim', async () => {\n        const {harness} = await setupTest({modeless: true});\n        expect(await harness.isScrimVisible()).toBeFalse();\n        harness.element.open = true;\n        expect(await harness.isScrimVisible()).toBeFalse();\n        harness.element.open = false;\n        expect(await harness.isScrimVisible()).toBeFalse();\n      });\n\n      it('does not close on external click', async () => {\n        const {harness} = await setupTest({modeless: true});\n        harness.element.show();\n        const dialogElement = await harness.getInteractiveElement();\n        dialogElement.click();\n        await harness.transitionComplete();\n        expect(harness.element.open).toBeTrue();\n        harness.element.close();\n        await harness.transitionComplete();\n      });\n      it('does not prevent document scrolling', async () => {\n        const {harness} = await setupTest({modeless: true});\n        expect(isDocumentScrollingDisabled()).toBeFalse();\n        harness.element.open = true;\n        await harness.transitionComplete();\n        expect(isDocumentScrollingDisabled()).toBeFalse();\n        harness.element.open = false;\n        await harness.transitionComplete();\n        expect(isDocumentScrollingDisabled()).toBeFalse();\n      });\n    });\n  });\n});\n"]}