{"version":3,"file":"icon-button_test.js","sourceRoot":"","sources":["icon-button_test.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright 2022 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport './standard-icon-button-toggle.js';\nimport './standard-link-icon-button.js';\nimport './standard-icon-button.js';\n\nimport {html} from 'lit';\n\nimport {Environment} from '../testing/environment.js';\n\nimport {IconButtonHarness} from './harness.js';\nimport {MdStandardIconButtonToggle} from './standard-icon-button-toggle.js';\n\nconst ICON_BUTTON_TEMPLATE = html`\n  <md-standard-icon-button aria-label=\"Star\">\n    star\n  </md-standard-icon-button>\n`;\nconst LINK_ICON_BUTTON_TEMPLATE = html`\n  <md-standard-link-icon-button aria-label=\"Star\">\n    star\n  </md-standard-link-icon-button>\n`;\nconst ICON_BUTTON_TOGGLE_TEMPLATE = html`\n  <md-standard-icon-button-toggle aria-label=\"Star\">\n      <md-icon slot=\"onIcon\">star</md-icon>\n      <md-icon slot=\"offIcon\">star_border</md-icon>\n  </md-standard-icon-button-toggle>\n`;\n\ninterface IconButtonInternals {\n  flipIcon: boolean;\n}\n\ndescribe('icon button tests', () => {\n  const env = new Environment();\n\n  describe('md-standard-icon-button', () => {\n    it('setting `disabled` updates the disabled attribute on the native ' +\n           'button element',\n       async () => {\n         const {element} = await setUpTest('md-standard-icon-button');\n         const button = element.shadowRoot!.querySelector('button')!;\n\n         element.disabled = true;\n         await element.updateComplete;\n         expect(button.hasAttribute('disabled')).toBeTrue();\n\n         element.disabled = false;\n         await element.updateComplete;\n         expect(button.hasAttribute('disabled')).toBeFalse();\n       });\n\n    it('setting `ariaLabel` updates the aria-label attribute on the native ' +\n           'button element',\n       async () => {\n         const {element} = await setUpTest('md-standard-icon-button');\n         const button = element.shadowRoot!.querySelector('button')!;\n\n         element.ariaLabel = 'test';\n         await element.updateComplete;\n         expect(button.getAttribute('aria-label')).toBe('test');\n       });\n  });\n\n  describe('md-standard-link-icon-button', () => {\n    it('setting `ariaLabel` updates the aria-label attribute on the anchor' +\n           'tag',\n       async () => {\n         const {element} = await setUpTest('md-standard-link-icon-button');\n         const anchor = element.shadowRoot!.querySelector('a')!;\n\n         element.ariaLabel = 'test';\n         await element.updateComplete;\n         expect(anchor.getAttribute('aria-label')).toBe('test');\n       });\n  });\n\n  describe('md-standard-icon-button-toggle', () => {\n    it('setting `disabled` updates the disabled attribute on the native ' +\n           'button element',\n       async () => {\n         const {element} = await setUpTest('md-standard-icon-button-toggle');\n         const button = element.shadowRoot!.querySelector('button')!;\n\n         element.disabled = true;\n         await element.updateComplete;\n         expect(button.hasAttribute('disabled')).toBeTrue();\n\n         element.disabled = false;\n         await element.updateComplete;\n         expect(button.hasAttribute('disabled')).toBeFalse();\n       });\n\n    it('setting `ariaLabel` updates the aria-label attribute on the native ' +\n           'button element',\n       async () => {\n         const {element} = await setUpTest('md-standard-icon-button-toggle');\n         const button = element.shadowRoot!.querySelector('button')!;\n\n         element.ariaLabel = 'test';\n         await element.updateComplete;\n         expect(button.getAttribute('aria-label')).toBe('test');\n       });\n\n    it('toggles the `selected` state when button is clicked', async () => {\n      const {element, harness} =\n          await setUpTest('md-standard-icon-button-toggle');\n      if (!(element instanceof MdStandardIconButtonToggle)) {\n        throw new Error(\n            'Icon button is not instance of MdStandardIconButtonToggle.');\n      }\n\n      expect(element.selected).toBeFalse();\n      await harness.clickWithMouse();\n      expect(element.selected).toBeTrue();\n      await harness.clickWithMouse();\n      expect(element.selected).toBeFalse();\n    });\n\n    it('fires input and change events when clicked', async () => {\n      const {element, harness} =\n          await setUpTest('md-standard-icon-button-toggle');\n      if (!(element instanceof MdStandardIconButtonToggle)) {\n        throw new Error(\n            'Icon button is not instance of MdStandardIconButtonToggle.');\n      }\n      let changeEvent = false;\n      let inputEvent = false;\n      element.addEventListener('input', () => inputEvent = true);\n      element.addEventListener('change', () => changeEvent = true);\n      expect(element.selected).toBeFalse();\n      await harness.clickWithMouse();\n      expect(element.selected).toBeTrue();\n      expect(inputEvent).toBeTrue();\n      expect(changeEvent).toBeTrue();\n    });\n\n    it('setting `selected` updates the aria-pressed attribute on the native button element',\n       async () => {\n         const {element} = await setUpTest('md-standard-icon-button-toggle');\n         if (!(element instanceof MdStandardIconButtonToggle)) {\n           throw new Error(\n               'Icon button is not instance of MdStandardIconButtonToggle.');\n         }\n\n         element.selected = true;\n         await element.updateComplete;\n         const button = element.shadowRoot!.querySelector('button')!;\n         expect(button.getAttribute('aria-pressed')).toEqual('true');\n\n         element.selected = false;\n         await element.updateComplete;\n         expect(button.getAttribute('aria-pressed')).toEqual('false');\n       });\n\n    it('button with toggled aria label toggles aria label', async () => {\n      const {element} = await setUpTest('md-standard-icon-button-toggle');\n      if (!(element instanceof MdStandardIconButtonToggle)) {\n        throw new Error(\n            'Icon button is not instance of MdStandardIconButtonToggle.');\n      }\n      element.ariaLabelSelected = 'aria label on';\n      element.ariaLabel = 'aria label off';\n      await element.updateComplete;\n\n      const button = element.shadowRoot!.querySelector('button')!;\n      expect(element.selected).toBeFalse();\n      expect(button.getAttribute('aria-label')).toEqual('aria label off');\n      expect(button.getAttribute('aria-pressed')).toBeNull();\n\n      // Toggle\n      button.click();\n      await element.updateComplete;\n      expect(element.selected).toBeTrue();\n      expect(button.getAttribute('aria-label')).toEqual('aria label on');\n      expect(button.getAttribute('aria-pressed')).toBeNull();\n    });\n\n    it('if `flipsIconInRtl=true`, flips icon in an RTL context', async () => {\n      const template = html`\n          <div dir=\"rtl\">\n            <md-standard-icon-button aria-label=\"Star\" .flipIconInRtl=\"${true}\">\n                star\n            </md-standard-icon-button>\n          </div>`;\n      const element =\n          env.render(template).querySelector('md-standard-icon-button')!;\n      await env.waitForStability();\n\n      expect((element as unknown as IconButtonInternals).flipIcon).toBeTrue();\n    });\n\n    it('if `flipsIconInRtl=true`, does not flip icon in an LTR context',\n       async () => {\n         const template = html`\n            <div dir=\"ltr\">\n              <md-standard-icon-button aria-label=\"Star\" .flipIconInRtl=\"${\n             true}\">\n                  star\n              </md-standard-icon-button>\n            </div>`;\n         const element =\n             env.render(template).querySelector('md-standard-icon-button')!;\n         await env.waitForStability();\n\n         expect((element as unknown as IconButtonInternals).flipIcon)\n             .toBeFalse();\n       });\n  });\n\n  async function setUpTest(tagName: string) {\n    let template;\n    switch (tagName) {\n      case 'md-standard-icon-button':\n        template = ICON_BUTTON_TEMPLATE;\n        break;\n      case 'md-standard-link-icon-button':\n        template = LINK_ICON_BUTTON_TEMPLATE;\n        break;\n      case 'md-standard-icon-button-toggle':\n        template = ICON_BUTTON_TOGGLE_TEMPLATE;\n        break;\n      default:\n        throw new Error('Invalid tag name: ' + tagName);\n    }\n\n    const element = env.render(template).querySelector(tagName)!;\n    await env.waitForStability();\n    return {\n      element,\n      harness: new IconButtonHarness(element),\n    };\n  }\n});\n"]}