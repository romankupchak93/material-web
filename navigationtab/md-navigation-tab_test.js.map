{"version":3,"file":"md-navigation-tab_test.js","sourceRoot":"","sources":["md-navigation-tab_test.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright 2022 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {html, render} from 'lit';\nimport {customElement} from 'lit/decorators.js';\n\nimport {Environment} from '../testing/environment.js';\n\nimport {NavigationTabHarness} from './harness.js';\nimport {MdNavigationTab} from './navigation-tab.js';\n\n@customElement('md-test-navigation-tab')\nclass TestNavigationTab extends MdNavigationTab {\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'md-test-navigation-tab': TestNavigationTab;\n  }\n}\n\ndescribe('mwc-navigation-tab', () => {\n  const env = new Environment();\n\n  async function setupTest() {\n    // Variant type does not matter for shared tests\n    const element =\n        env.render(html`<md-test-navigation-tab></md-test-navigation-tab>`)\n            .querySelector('md-test-navigation-tab');\n    if (!element) {\n      throw new Error('Could not query rendered <md-test-navigation-tab>.');\n    }\n\n    await env.waitForStability();\n    const button = element.renderRoot.querySelector('button');\n    if (!button) {\n      throw new Error('Could not query rendered <button>.');\n    }\n\n    const navTab = element.renderRoot.querySelector('.md3-navigation-tab');\n    if (!navTab) {\n      throw new Error('Could not query rendered .md3-navigation-tab.');\n    }\n\n    const focusRing = element.renderRoot.querySelector('md-focus-ring');\n    if (!focusRing) {\n      throw new Error('Could not query rendered <md-focus-ring>.');\n    }\n\n    return {\n      button,\n      navTab,\n      focusRing,\n      harness: new NavigationTabHarness(element),\n    };\n  }\n\n  describe('basic', () => {\n    it('initializes as an md-navigation-tab', async () => {\n      const {harness} = await setupTest();\n      expect(harness.element).toBeInstanceOf(MdNavigationTab);\n      expect(harness.element.active).toBeFalse();\n      expect(harness.element.hideInactiveLabel).toBeFalse();\n      expect(harness.element.label).toBeUndefined();\n      expect(harness.element.badgeValue).toEqual('');\n      expect(harness.element.showBadge).toBeFalse();\n    });\n\n    it('emits interaction event on click', async () => {\n      const {harness} = await setupTest();\n      const interactionHandler = jasmine.createSpy();\n      harness.element.addEventListener(\n          'navigation-tab-interaction', interactionHandler);\n      await harness.clickWithMouse();\n      expect(interactionHandler).toHaveBeenCalled();\n    });\n\n    it('focus() sets focus on button element', async () => {\n      const {harness, button} = await setupTest();\n      harness.element.focus();\n      expect(button.matches(':focus')).toBeTrue();\n    });\n  });\n\n  it('on render navigation-tab-rendered event fires', async () => {\n    const element = document.createElement('md-test-navigation-tab');\n    const renderedHandler = jasmine.createSpy();\n    element.addEventListener('navigation-tab-rendered', renderedHandler);\n    env.render(html`${element}`);\n    await env.waitForStability();\n    expect(renderedHandler).toHaveBeenCalled();\n  });\n\n  describe('active', () => {\n    it('affects `aria-selected` of native button', async () => {\n      const {harness, button} = await setupTest();\n      harness.element.active = true;\n      await env.waitForStability();\n\n      expect(button.getAttribute('aria-selected')).toEqual('true');\n\n      harness.element.active = false;\n      await env.waitForStability();\n      expect(button.getAttribute('aria-selected')).toEqual('false');\n    });\n\n    it('affects `tabindex` of native button', async () => {\n      const {harness, button} = await setupTest();\n      harness.element.active = true;\n      await env.waitForStability();\n\n      expect(button.getAttribute('tabindex')).toEqual('0');\n\n      harness.element.active = false;\n      await env.waitForStability();\n      expect(button.getAttribute('tabindex')).toEqual('-1');\n    });\n\n    it('sets the correct classes', async () => {\n      const {harness, navTab} = await setupTest();\n      harness.element.active = true;\n      await env.waitForStability();\n\n      expect(navTab.classList.contains('md3-navigation-tab--active'))\n          .toBeTrue();\n    });\n  });\n\n  describe('hideInactiveLabel', () => {\n    it('sets the correct classes', async () => {\n      const {harness, navTab} = await setupTest();\n      harness.element.hideInactiveLabel = true;\n      await env.waitForStability();\n\n      expect(\n          navTab.classList.contains('md3-navigation-tab--hide-inactive-label'))\n          .toBeTrue();\n    });\n  });\n\n  describe('label', () => {\n    it('displays label text', async () => {\n      const {harness} = await setupTest();\n      harness.element.label = 'foo';\n      await env.waitForStability();\n\n      const content = harness.element.shadowRoot!.querySelector(\n          '.md3-navigation-tab__label-text')!;\n      expect(content.textContent!.trim()).toEqual('foo');\n    });\n  });\n\n  describe('ariaLabel', () => {\n    it('affects `aria-label` of native button', async () => {\n      const {harness, button} = await setupTest();\n      harness.element.label = 'foo';\n      harness.element.ariaLabel = 'bar';\n      await env.waitForStability();\n\n      expect(button.getAttribute('aria-label')).toEqual('bar');\n    });\n  });\n\n  describe('showBadge', () => {\n    it('displays badge', async () => {\n      const {harness} = await setupTest();\n      harness.element.showBadge = true;\n      await env.waitForStability();\n\n      const badge = harness.element.renderRoot.querySelector('md-badge');\n      expect(badge).toBeDefined();\n    });\n\n    it('does not display badge if showBadge is false', async () => {\n      const {harness} = await setupTest();\n      harness.element.showBadge = false;\n      await env.waitForStability();\n\n      const badge = harness.element.renderRoot.querySelector('md-badge');\n      expect(badge).toEqual(null);\n    });\n  });\n\n  describe('badgeValue', () => {\n    it('displays badge value', async () => {\n      const {harness} = await setupTest();\n      harness.element.showBadge = true;\n      harness.element.badgeValue = '9';\n      await env.waitForStability();\n\n      const badge = harness.element.renderRoot.querySelector('md-badge');\n      expect(badge?.value).toEqual('9');\n    });\n  });\n\n  describe('icons', () => {\n    it('nodes with `slot=activeIcon` will serve as the active icon',\n       async () => {\n         const {harness} = await setupTest();\n         const icons = html`\n           <i slot=\"activeIcon\" class=\"material-icons\">star</i>\n           <i slot=\"inactiveIcon\" class=\"material-icons\">star_border</i>\n         `;\n         render(icons, harness.element);\n\n         const icon =\n             harness.element.querySelector<HTMLElement>('[slot=\"activeIcon\"]')!;\n         expect(icon.textContent!.trim()).toEqual('star');\n       });\n\n    it('nodes with `slot=inactiveIcon` will serve as the inactive icon',\n       async () => {\n         const {harness} = await setupTest();\n         const icons = html`\n           <i slot=\"activeIcon\" class=\"material-icons\">star</i>\n           <i slot=\"inactiveIcon\" class=\"material-icons\">star_border</i>\n         `;\n         render(icons, harness.element);\n\n         const icon = harness.element.querySelector<HTMLElement>(\n             '[slot=\"inactiveIcon\"]')!;\n         expect(icon.textContent!.trim()).toEqual('star_border');\n       });\n  });\n\n  describe('focus ring', () => {\n    it('hidden on non-keyboard focus', async () => {\n      const {harness, focusRing} = await setupTest();\n      await harness.clickWithMouse();\n      expect(focusRing.visible).toBeFalse();\n    });\n\n    it('visible on keyboard focus and hides on blur', async () => {\n      const {harness, focusRing} = await setupTest();\n      await harness.focusWithKeyboard();\n      expect(focusRing.visible).toBeTrue();\n      await harness.blur();\n      expect(focusRing.visible).toBeFalse();\n    });\n\n    it('hidden after pointer interaction', async () => {\n      const {harness, focusRing} = await setupTest();\n      await harness.focusWithKeyboard();\n      expect(focusRing.visible).toBeTrue();\n      await harness.clickWithMouse();\n      expect(focusRing.visible).toBeFalse();\n    });\n  });\n});\n"]}