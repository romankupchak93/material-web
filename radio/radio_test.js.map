{"version":3,"file":"radio_test.js","sourceRoot":"","sources":["radio_test.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright 2019 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {html} from 'lit';\n\nimport {MdFocusRing} from '../focus/focus-ring.js';\nimport {Environment} from '../testing/environment.js';\nimport {createTokenTests} from '../testing/tokens.js';\n\nimport {RadioHarness} from './harness.js';\nimport {MdRadio} from './radio.js';\n\nconst defaultRadio = html`<md-radio></md-radio>`;\n\nconst radioGroup = html`\n  <md-radio id=\"a1\" name=\"a\"></md-radio>\n  <md-radio id=\"a2\" name=\"a\"></md-radio>\n  <md-radio id=\"b1\" name=\"b\"></md-radio>\n`;\n\nconst radioGroupDisabled = html`\n  <md-radio id=\"a1\" name=\"a\" disabled></md-radio>\n  <md-radio id=\"a2\" name=\"a\" disabled checked></md-radio>\n`;\n\nconst radioGroupPreSelected = html`\n  <md-radio id=\"a1\" name=\"a\"></md-radio>\n  <md-radio id=\"a2\" name=\"a\" checked></md-radio>\n  <md-radio id=\"a3\" name=\"a\"></md-radio>\n  <md-radio id=\"b1\" name=\"b\"></md-radio>\n`;\n\ndescribe('<md-radio>', () => {\n  const env = new Environment();\n\n  // Note, this would be better in the harness, but waiting in the test setup\n  // can be flakey without access to the test `env`.\n  async function simulateKeyDown(element: HTMLElement, key: string) {\n    const event = new KeyboardEvent('keydown', {key, bubbles: true});\n    element.dispatchEvent(event);\n    // TODO(https://bugzilla.mozilla.org/show_bug.cgi?id=1804576)\n    // Remove delay when issue addressed.\n    await env.waitForStability();\n  }\n\n  async function setupTest(template = defaultRadio) {\n    const root = env.render(template);\n    await env.waitForStability();\n    const radios = Array.from(root.querySelectorAll('md-radio'));\n    const harnesses = radios.map(radio => new RadioHarness(radio));\n    return {harnesses, root};\n  }\n\n  describe('.styles', () => {\n    createTokenTests(MdRadio.styles);\n  });\n\n  describe('basic', () => {\n    it('initializes as an md-radio', async () => {\n      const {harnesses} = await setupTest();\n      expect(harnesses[0].element).toBeInstanceOf(MdRadio);\n    });\n\n    it('clicking a radio should select it', async () => {\n      const {harnesses} = await setupTest(radioGroup);\n      const unselected = harnesses[1];\n      expect(unselected.element.checked)\n          .withContext('unselected checked')\n          .toBeFalse();\n\n      await unselected.clickWithMouse();\n      expect(unselected.element.checked)\n          .withContext('after clicking checked')\n          .toBeTrue();\n    });\n\n    it('clicking a radio should unselect other radio which is already selected',\n       async () => {\n         const {harnesses} = await setupTest(radioGroupPreSelected);\n         const [, a2, a3] = harnesses;\n         expect(a2.element.checked).withContext('already checked').toBeTrue();\n\n         await a3.clickWithMouse();\n         expect(a3.element.checked).withContext('new radio checked').toBeTrue();\n         expect(a2.element.checked)\n             .withContext('previous radio checked')\n             .toBeFalse();\n       });\n\n    it('disabled radio should not be selected when clicked', async () => {\n      const {harnesses} = await setupTest(radioGroupDisabled);\n      const [a1, a2] = harnesses;\n\n      expect(a1.element.checked).withContext('unchecked radio').toBeFalse();\n      expect(a2.element.checked).withContext('checked radio').toBeTrue();\n\n      await a1.clickWithMouse();\n      expect(a1.element.checked)\n          .withContext('still unchecked radio')\n          .toBeFalse();\n\n      await a2.clickWithMouse();\n      expect(a2.element.checked).withContext('still checked radio').toBeTrue();\n    });\n  });\n\n  describe('events', () => {\n    it('Should trigger change event when a radio is selected', async () => {\n      const {harnesses, root} = await setupTest(radioGroupPreSelected);\n      const changeHandler = jasmine.createSpy('changeHandler');\n      root.addEventListener('change', changeHandler);\n\n      const a3 = harnesses[2];\n      await a3.clickWithMouse();\n\n      expect(a3.element.checked)\n          .withContext('clicked radio checked')\n          .toBeTrue();\n      expect(changeHandler).toHaveBeenCalledTimes(1);\n      expect(changeHandler).toHaveBeenCalledWith(jasmine.any(Event));\n    });\n  });\n\n  describe('navigation', () => {\n    it('Using arrow right should select the next radio button', async () => {\n      const {harnesses} = await setupTest(radioGroupPreSelected);\n      const [, a2, a3] = harnesses;\n      expect(a2.element.checked)\n          .withContext('default checked radio')\n          .toBeTrue();\n\n      await simulateKeyDown(a2.element, 'ArrowRight');\n\n      expect(a3.element.checked).withContext('next radio checked').toBeTrue();\n      expect(a2.element.checked).withContext('prev radio checked').toBeFalse();\n    });\n\n    it('Using arrow right on the last radio should select the first radio in that group',\n       async () => {\n         const {harnesses} = await setupTest(radioGroupPreSelected);\n         const [a1, a2, a3, b1] = harnesses;\n\n         expect(a2.element.checked).toBeTrue();\n\n         await simulateKeyDown(a2.element, 'ArrowRight');\n         await simulateKeyDown(a3.element, 'ArrowRight');\n\n         expect(a3.element.checked)\n             .withContext('last radio checked')\n             .toBeFalse();\n         expect(a1.element.checked)\n             .withContext('first radio checked')\n             .toBeTrue();\n         expect(b1.element.checked)\n             .withContext('unrelated radio checked')\n             .toBeFalse();\n       });\n  });\n\n  describe('manages selection groups', () => {\n    it('synchronously', async () => {\n      const {harnesses} = await setupTest(radioGroup);\n      const [a1, a2, b1] = harnesses;\n\n      expect(a1.element.checked).withContext('initially unchecked').toBeFalse();\n      expect(a2.element.checked).withContext('initially unchecked').toBeFalse();\n      expect(b1.element.checked).withContext('initially unchecked').toBeFalse();\n\n      // Should uncheck previously checked radio\n      a2.element.checked = true;\n      a1.element.checked = true;\n\n      expect(a1.element.checked).withContext('last radio checked').toBeTrue();\n      expect(a2.element.checked)\n          .withContext('unchecked by last radio')\n          .toBeFalse();\n      expect(b1.element.checked)\n          .withContext('unrelated radio unchecked')\n          .toBeFalse();\n\n      // Should re-check radio\n      a2.element.checked = true;\n      a1.element.checked = true;\n      a2.element.checked = true;\n      expect(a1.element.checked)\n          .withContext('unchecked by second radio')\n          .toBeFalse();\n      expect(a2.element.checked).withContext('last radio checked').toBeTrue();\n      expect(b1.element.checked)\n          .withContext('unrelated radio unchecked')\n          .toBeFalse();\n\n      // Should ignore unrelated radios\n      a1.element.checked = true;\n      expect(a1.element.checked)\n          .withContext('related checked radio')\n          .toBeTrue();\n      expect(a2.element.checked)\n          .withContext('related unchecked radio')\n          .toBeFalse();\n      expect(b1.element.checked)\n          .withContext('unrelated unchecked radio')\n          .toBeFalse();\n\n      b1.element.checked = true;\n      expect(a1.element.checked)\n          .withContext('related checked radio')\n          .toBeTrue();\n      expect(a2.element.checked)\n          .withContext('related unchecked radio')\n          .toBeFalse();\n      expect(b1.element.checked)\n          .withContext('unrelated checked radio')\n          .toBeTrue();\n\n      a1.element.checked = false;\n      b1.element.checked = false;\n      expect(a1.element.checked)\n          .withContext('related unchecked radio')\n          .toBeFalse();\n      expect(a2.element.checked)\n          .withContext('related unchecked radio')\n          .toBeFalse();\n      expect(b1.element.checked)\n          .withContext('unrelated unchecked radio')\n          .toBeFalse();\n    });\n\n    it('after updates settle', async () => {\n      const {harnesses} = await setupTest(radioGroup);\n      const [a1, a2, b1] = harnesses;\n      const allUpdatesComplete = () => Promise.all(\n          harnesses.map((harness) => harness.element.updateComplete));\n\n      await allUpdatesComplete();\n      expect(a1.element.checked).withContext('initially unchecked').toBeFalse();\n      expect(a2.element.checked).withContext('initially unchecked').toBeFalse();\n      expect(b1.element.checked).withContext('initially unchecked').toBeFalse();\n\n      // Should uncheck previously checked radio\n      a2.element.checked = true;\n      a1.element.checked = true;\n      await allUpdatesComplete();\n\n      expect(a1.element.checked).withContext('last radio checked').toBeTrue();\n      expect(a2.element.checked)\n          .withContext('unchecked by last radio')\n          .toBeFalse();\n      expect(b1.element.checked)\n          .withContext('unrelated radio unchecked')\n          .toBeFalse();\n\n      // Should re-check radio\n      a2.element.checked = true;\n      a1.element.checked = true;\n      a2.element.checked = true;\n      await allUpdatesComplete();\n      expect(a1.element.checked)\n          .withContext('unchecked by second radio')\n          .toBeFalse();\n      expect(a2.element.checked).withContext('last radio checked').toBeTrue();\n      expect(b1.element.checked)\n          .withContext('unrelated radio unchecked')\n          .toBeFalse();\n\n      // Should ignore unrelated radios\n      a1.element.checked = true;\n      expect(a1.element.checked)\n          .withContext('related checked radio')\n          .toBeTrue();\n      expect(a2.element.checked)\n          .withContext('related unchecked radio')\n          .toBeFalse();\n      expect(b1.element.checked)\n          .withContext('unrelated unchecked radio')\n          .toBeFalse();\n\n      b1.element.checked = true;\n      await allUpdatesComplete();\n      expect(a1.element.checked)\n          .withContext('related checked radio')\n          .toBeTrue();\n      expect(a2.element.checked)\n          .withContext('related unchecked radio')\n          .toBeFalse();\n      expect(b1.element.checked)\n          .withContext('unrelated checked radio')\n          .toBeTrue();\n\n      a1.element.checked = false;\n      b1.element.checked = false;\n      await allUpdatesComplete();\n      expect(a1.element.checked)\n          .withContext('related unchecked radio')\n          .toBeFalse();\n      expect(a2.element.checked)\n          .withContext('related unchecked radio')\n          .toBeFalse();\n      expect(b1.element.checked)\n          .withContext('unrelated unchecked radio')\n          .toBeFalse();\n    });\n\n    it('when checked before connected', async () => {\n      const root = env.render(html`<main></main>`);\n      const container = root.querySelector('main')!;\n\n      const r1 = document.createElement('md-radio');\n      r1.setAttribute('name', 'a');\n      const r2 = document.createElement('md-radio');\n      r2.setAttribute('name', 'a');\n      const r3 = document.createElement('md-radio');\n      r3.setAttribute('name', 'a');\n\n      // r1 and r2 should both be checked, because even though they have the\n      // same name, they aren't yet connected to a root. Groups are scoped to\n      // roots, and we can't know which root a radio belongs to until it is\n      // connected to one. This matches native <input type=\"radio\"> behavior.\n      r1.checked = true;\n      r2.checked = true;\n      expect(r1.checked).toBeTrue();\n      expect(r2.checked).toBeTrue();\n      expect(r3.checked).toBeFalse();\n\n      // Connecting r1 shouldn't change anything, since it's the only one in the\n      // group.\n      container.appendChild(r1);\n      expect(r1.checked).toBeTrue();\n      expect(r2.checked).toBeTrue();\n      expect(r3.checked).toBeFalse();\n\n      // Appending r2 should uncheck r1, because when a new checked radio is\n      // connected, it wins (this matches native input behavior).\n      container.appendChild(r2);\n      expect(r1.checked).toBeFalse();\n      expect(r2.checked).toBeTrue();\n      expect(r3.checked).toBeFalse();\n\n      // Appending r3 shouldn't change anything, because it's not checked.\n      container.appendChild(r3);\n      expect(r1.checked).toBeFalse();\n      expect(r2.checked).toBeTrue();\n      expect(r3.checked).toBeFalse();\n\n      // Checking r3 should uncheck r2 because it's now in the same group.\n      r3.checked = true;\n      expect(r1.checked).toBeFalse();\n      expect(r2.checked).toBeFalse();\n      expect(r3.checked).toBeTrue();\n    });\n\n    it('in a lit repeat', async () => {\n      const values = ['a1', 'a2'];\n      const repeated = values.map(\n          (value) => html`<md-radio value=${value} name=\"a\"></md-radio>`);\n      const root = env.render(html`${repeated}`);\n      await env.waitForStability();\n      const [a1, a2] = root.querySelectorAll('md-radio');\n\n      expect(a1.checked).toBeFalse();\n      expect(a2.checked).toBeFalse();\n      expect(a1.value).toEqual(values[0]);\n      expect(a2.value).toEqual(values[1]);\n\n      a1.checked = true;\n      expect(a1.checked).toBeTrue();\n      expect(a2.checked).toBeFalse();\n\n      a2.checked = true;\n      expect(a1.checked).toBeFalse();\n      expect(a2.checked).toBeTrue();\n\n      a2.checked = false;\n      expect(a1.checked).toBeFalse();\n      expect(a2.checked).toBeFalse();\n    });\n  });\n\n  describe('focus ring', () => {\n    let element: MdRadio;\n    let focusRing: MdFocusRing;\n    let harness: RadioHarness;\n\n    beforeEach(async () => {\n      const root = env.render(defaultRadio);\n      await env.waitForStability();\n      element = root.querySelector('md-radio')!;\n      focusRing = element.shadowRoot!.querySelector('md-focus-ring')!;\n      harness = new RadioHarness(element);\n    });\n\n    it('hidden on non-keyboard focus', async () => {\n      await harness.clickWithMouse();\n      expect(focusRing.visible).toBeFalse();\n    });\n\n    it('visible on keyboard focus and hides on blur', async () => {\n      await harness.focusWithKeyboard();\n      expect(focusRing.visible).toBeTrue();\n      await harness.blur();\n      expect(focusRing.visible).toBeFalse();\n    });\n\n    it('hidden after pointer interaction', async () => {\n      await harness.focusWithKeyboard();\n      expect(focusRing.visible).toBeTrue();\n      await harness.clickWithMouse();\n      expect(focusRing.visible).toBeFalse();\n    });\n  });\n\n  describe('form submission', () => {\n    async function setupFormTest() {\n      const root = env.render(html`\n        <form>\n          <md-radio id=\"first\" name=\"a\" value=\"first\"></md-radio>\n          <md-radio id=\"disabled\" name=\"a\" value=\"disabled\" disabled></md-radio>\n          <md-radio id=\"unNamed\" value=\"unnamed\"></md-radio>\n          <md-radio id=\"ownGroup\" name=\"b\" value=\"ownGroup\"></md-radio>\n          <md-radio id=\"last\" name=\"a\" value=\"last\"></md-radio>\n        </form>`);\n      await env.waitForStability();\n      const harnesses = new Map<string, RadioHarness>();\n      Array.from(root.querySelectorAll('md-radio')).forEach((el: MdRadio) => {\n        harnesses.set(el.id, new RadioHarness(el));\n      });\n      return harnesses;\n    }\n\n    it('does not submit if not checked', async () => {\n      const harness = (await setupFormTest()).get('first')!;\n      const formData = await harness.submitForm();\n      const keys = Array.from(formData.keys());\n      expect(keys.length).toEqual(0);\n    });\n\n    it('does not submit if disabled', async () => {\n      const harness = (await setupFormTest()).get('disabled')!;\n      expect(harness.element.disabled).toBeTrue();\n      harness.element.checked = true;\n      const formData = await harness.submitForm();\n      const keys = Array.from(formData.keys());\n      expect(keys.length).toEqual(0);\n    });\n\n    it('does not submit if name is not provided', async () => {\n      const harness = (await setupFormTest()).get('unNamed')!;\n      expect(harness.element.name).toBe('');\n      const formData = await harness.submitForm();\n      const keys = Array.from(formData.keys());\n      expect(keys.length).toEqual(0);\n    });\n\n    it('submits under correct conditions', async () => {\n      const harness = (await setupFormTest()).get('first')!;\n      harness.element.checked = true;\n      const formData = await harness.submitForm();\n      const {name, value} = harness.element;\n      const keys = Array.from(formData.keys());\n      expect(keys.length).toEqual(1);\n      expect(formData.get(name)).toEqual(value);\n    });\n\n    it('submits changes to group value under correct conditions', async () => {\n      const harnesses = await setupFormTest();\n      const first = harnesses.get('first')!;\n      const last = harnesses.get('last')!;\n      const ownGroup = harnesses.get('ownGroup')!;\n\n      // check first and submit\n      first.element.checked = true;\n      let formData = await first.submitForm();\n      expect(Array.from(formData.keys()).length).toEqual(1);\n      expect(formData.get(first.element.name)).toEqual(first.element.value);\n\n      // check last and submit\n      last.element.checked = true;\n      formData = await last.submitForm();\n      expect(Array.from(formData.keys()).length).toEqual(1);\n      expect(formData.get(last.element.name)).toEqual(last.element.value);\n\n      // check ownGroup and submit\n      ownGroup.element.checked = true;\n      formData = await ownGroup.submitForm();\n      expect(Array.from(formData.keys()).length).toEqual(2);\n      expect(formData.get(last.element.name)).toEqual(last.element.value);\n      expect(formData.get(ownGroup.element.name))\n          .toEqual(ownGroup.element.value);\n    });\n  });\n\n  describe('label activation', () => {\n    async function setupLabelTest() {\n      const root = env.render(html`\n        <label> <md-radio name=\"a\"></md-radio></label>\n        <label> <md-radio name=\"a\"></md-radio></label>\n     `);\n      await env.waitForStability();\n      // [[label, radio]]\n      return Array.from(root.querySelectorAll('label'))\n          .map(el => ([el, el.firstElementChild as MdRadio] as const));\n    }\n\n    it('toggles when label is clicked', async () => {\n      const [[label1, radio1], [label2, radio2], ] = await setupLabelTest();\n\n      label1.click();\n      await env.waitForStability();\n      expect(radio1.checked).toBeTrue();\n      expect(radio2.checked).toBeFalse();\n\n      label2.click();\n      await env.waitForStability();\n      expect(radio1.checked).toBeFalse();\n      expect(radio2.checked).toBeTrue();\n    });\n  });\n});\n"]}