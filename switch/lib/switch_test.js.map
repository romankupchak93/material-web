{"version":3,"file":"switch_test.js","sourceRoot":"","sources":["switch_test.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright 2021 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {html} from 'lit';\nimport {customElement} from 'lit/decorators.js';\nimport {ifDefined} from 'lit/directives/if-defined.js';\n\nimport {Environment} from '../../testing/environment.js';\nimport {Harness} from '../../testing/harness.js';\n\nimport {Switch} from './switch.js';\n\n@customElement('md-test-switch')\nclass TestSwitch extends Switch {\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'md-test-switch': TestSwitch;\n  }\n}\n\nfunction renderSwitch(propsInit: Partial<TestSwitch> = {}) {\n  return html`\n    <md-test-switch\n      ?selected=${propsInit.selected === true}\n      ?disabled=${propsInit.disabled === true}\n      .name=${propsInit.name ?? ''}\n      value=${ifDefined(propsInit.value)}></md-test-switch>\n  `;\n}\n\nfunction renderSwitchInForm(propsInit: Partial<TestSwitch> = {}) {\n  return html`\n    <form>${renderSwitch(propsInit)}</form>\n  `;\n}\n\nfunction renderSwitchInLabel(propsInit: Partial<TestSwitch> = {}) {\n  return html`\n    <label>${renderSwitch(propsInit)}</label>\n  `;\n}\n\ndescribe('md-switch', () => {\n  const env = new Environment();\n\n  async function switchElement(\n      propsInit: Partial<TestSwitch> = {}, template = renderSwitch) {\n    const root = env.render(html`<div>${template(propsInit)}</div>`);\n    await env.waitForStability();\n    const element = root.querySelector('md-test-switch');\n    if (!element) {\n      throw new Error('Could not query rendered <md-test-switch>.');\n    }\n    return element;\n  }\n\n  let toggle: TestSwitch;\n\n  beforeEach(async () => {\n    toggle = await switchElement();\n  });\n\n  describe('selected', () => {\n    let selected: TestSwitch;\n\n    beforeEach(async () => {\n      selected = await switchElement({selected: true});\n    });\n\n    it('is false by default', () => {\n      expect(toggle.selected).toBeFalse();\n    });\n\n    it('sets `aria-checked` of button', () => {\n      const toggleButton = toggle.shadowRoot!.querySelector('button')!;\n      expect(toggleButton.getAttribute('aria-checked')).toEqual('false');\n\n      const selectedButton = selected.shadowRoot!.querySelector('button')!;\n      expect(selectedButton.getAttribute('aria-checked')).toEqual('true');\n    });\n\n    it('adds md3-switch--selected class when true', () => {\n      const toggleRoot = toggle.shadowRoot!.querySelector('.md3-switch')!;\n      expect(Array.from(toggleRoot.classList))\n          .not.toContain('md3-switch--selected');\n\n      const selectedRoot = selected.shadowRoot!.querySelector('.md3-switch')!;\n      expect(Array.from(selectedRoot.classList))\n          .toContain('md3-switch--selected');\n    });\n\n    it('adds md3-switch--unselected class when false', () => {\n      const toggleRoot = toggle.shadowRoot!.querySelector('.md3-switch')!;\n      expect(Array.from(toggleRoot.classList))\n          .toContain('md3-switch--unselected');\n\n      const selectedRoot = selected.shadowRoot!.querySelector('.md3-switch')!;\n      expect(Array.from(selectedRoot.classList))\n          .not.toContain('md3-switch--unselected');\n    });\n  });\n\n  describe('disabled', () => {\n    let disabled: TestSwitch;\n\n    beforeEach(async () => {\n      disabled = await switchElement({disabled: true});\n    });\n\n    it('is false by default', () => {\n      expect(toggle.disabled).toBeFalse();\n    });\n\n    it('sets disabled of button', () => {\n      const toggleButton = toggle.shadowRoot!.querySelector('button')!;\n      expect(toggleButton.disabled).toBeFalse();\n\n      const selectedButton = disabled.shadowRoot!.querySelector('button')!;\n      expect(selectedButton.disabled).toBeTrue();\n    });\n  });\n\n  describe('aria', () => {\n    it('is an empty string by default', () => {\n      expect(toggle.ariaLabel).toEqual('');\n    });\n\n    it('delegates aria-label to the proper element', async () => {\n      const button = toggle.shadowRoot!.querySelector('button')!;\n      toggle.setAttribute('aria-label', 'foo');\n      await toggle.updateComplete;\n      expect(toggle.ariaLabel).toEqual('foo');\n      expect(toggle.getAttribute('aria-label')).toEqual(null);\n      expect(button.getAttribute('aria-label')).toEqual('foo');\n    });\n\n    it('delegates .ariaLabel to the proper element', async () => {\n      const button = toggle.shadowRoot!.querySelector('button')!;\n      toggle.ariaLabel = 'foo';\n      await toggle.updateComplete;\n      expect(toggle.ariaLabel).toEqual('foo');\n      expect(toggle.getAttribute('aria-label')).toEqual(null);\n      expect(button.getAttribute('aria-label')).toEqual('foo');\n    });\n\n    it('delegates aria-labelledby to the proper element', async () => {\n      const button = toggle.shadowRoot!.querySelector('button')!;\n      toggle.setAttribute('aria-labelledby', 'foo');\n      await toggle.updateComplete;\n      expect(toggle.ariaLabelledBy).toEqual('foo');\n      expect(toggle.getAttribute('aria-labelledby')).toEqual(null);\n      expect(button.getAttribute('aria-labelledby')).toEqual('foo');\n    });\n\n    it('delegates .ariaLabelledBy to the proper element', async () => {\n      const button = toggle.shadowRoot!.querySelector('button')!;\n      toggle.ariaLabelledBy = 'foo';\n      await toggle.updateComplete;\n      expect(toggle.ariaLabelledBy).toEqual('foo');\n      expect(toggle.getAttribute('aria-labelledby')).toEqual(null);\n      expect(button.getAttribute('aria-labelledby')).toEqual('foo');\n    });\n  });\n\n  describe('name', () => {\n    it('is an empty string by default', () => {\n      expect(toggle.name).toEqual('');\n    });\n\n    it('reflects as an attribute', async () => {\n      toggle.name = 'foo';\n      await toggle.updateComplete;\n      expect(toggle.getAttribute('name')).toEqual('foo');\n    });\n  });\n\n  describe('value', () => {\n    it('is \"on\" by default', () => {\n      expect(toggle.value).toEqual('on');\n    });\n  });\n\n  describe('click()', () => {\n    it('toggles element', () => {\n      expect(toggle.selected).withContext('is false by default').toBeFalse();\n      toggle.click();\n      expect(toggle.selected).withContext('should toggle selected').toBeTrue();\n    });\n\n    it('does nothing if disabled', () => {\n      expect(toggle.selected).withContext('is false by default').toBeFalse();\n      toggle.disabled = true;\n      toggle.click();\n      expect(toggle.selected).withContext('should remain false').toBeFalse();\n    });\n  });\n\n  describe('form submission', () => {\n    async function switchInForm(\n        propsInit: Partial<TestSwitch> = {}, template = renderSwitchInForm) {\n      const element = await switchElement(propsInit, template);\n      return new Harness(element);\n    }\n\n    it('does not submit if not selected', async () => {\n      const harness = await switchInForm({name: 'foo'});\n      const formData = await harness.submitForm();\n      expect(formData.get('foo')).toBeNull();\n    });\n\n    it('does not submit if disabled', async () => {\n      const harness =\n          await switchInForm({name: 'foo', selected: true, disabled: true});\n      const formData = await harness.submitForm();\n      expect(formData.get('foo')).toBeNull();\n    });\n\n    it('does not submit if name is not provided', async () => {\n      const harness = await switchInForm({selected: true});\n      const formData = await harness.submitForm();\n      const keys = Array.from(formData.keys());\n      expect(keys.length).toEqual(0);\n    });\n\n    it('submits under correct conditions', async () => {\n      const harness =\n          await switchInForm({name: 'foo', selected: true, value: 'bar'});\n      const formData = await harness.submitForm();\n      expect(formData.get('foo')).toEqual('bar');\n    });\n\n    describe('label activation', () => {\n      let label: HTMLLabelElement;\n\n      it('toggles when label is clicked', async () => {\n        toggle = await switchElement({}, renderSwitchInLabel);\n        label = toggle.parentElement as HTMLLabelElement;\n        label.click();\n        await env.waitForStability();\n        expect(toggle.selected).toBeTrue();\n        label.click();\n        await env.waitForStability();\n        expect(toggle.selected).toBeFalse();\n      });\n    });\n  });\n});\n"]}