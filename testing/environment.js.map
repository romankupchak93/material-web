{"version":3,"file":"environment.js","sourceRoot":"","sources":["environment.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright 2021 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\n// import 'jasmine'; (google3-only)\n\nimport {ReactiveElement, render as litRender, TemplateResult} from 'lit';\n\nimport {installSkipWebAnimations} from './skip-animations.js';\n\n/**\n * Test environment setup for screenshot tests.\n */\nexport class Environment {\n  /**\n   * An array of root containers for rendering screenshot test elements.\n   */\n  private readonly roots: HTMLElement[] = [];\n\n  constructor() {\n    // Replace RAF with setTimeout, since setTimeout is overridden to be\n    // synchronous in Jasmine clock installation.\n    window.requestAnimationFrame = (callback: FrameRequestCallback) => {\n      return setTimeout(callback, 1);\n    };\n    window.cancelAnimationFrame = (id: number) => {\n      clearTimeout(id);\n    };\n\n    beforeAll(() => {\n      jasmine.clock().install();\n    });\n\n    afterAll(() => {\n      jasmine.clock().uninstall();\n      for (const root of this.roots) {\n        document.body.appendChild(root);\n      }\n    });\n  }\n\n  /**\n   * This marks the enviroment to run without web animations. This is useful\n   * when the tested code calls `.animate`.\n   */\n  withoutWebAnimations() {\n    installSkipWebAnimations();\n    return this;\n  }\n\n  /**\n   * Waits for stability on the page to prevent flaky-ness tests. Use this if\n   * waiting for an API that uses `requestAnimationFrame()` or when waiting for\n   * a Lit element to render.\n   */\n  async waitForStability() {\n    // Move forward any `requestAnimationFrame()`s since they are replaced with\n    // setTimeout(callback, 1) for jasmine clock support.\n    jasmine.clock().tick(1);\n\n    const currentRoot = this.getCurrentRoot();\n    if (currentRoot) {\n      await this.waitForLitRender(currentRoot);\n    }\n  }\n\n  /**\n   * Waits for all Lit `ReactiveElement` children of the given parent node to\n   * finish rendering.\n   *\n   * @param root a parent node to wait for rendering on.\n   */\n  private async waitForLitRender(root: ParentNode) {\n    for (const element of root.querySelectorAll('*')) {\n      if (this.isReactiveElement(element)) {\n        await element.updateComplete;\n        await this.waitForLitRender(element.renderRoot);\n      }\n    }\n  }\n\n  /**\n   * Tests if an element is a Lit `ReactiveElement`.\n   *\n   * @param element the element to test.\n   * @return true if the element is a `ReactiveElement`.\n   */\n  private isReactiveElement(element: Element): element is ReactiveElement {\n    return Boolean((element as ReactiveElement).updateComplete);\n  }\n\n  /**\n   * Render a Lit template in the environment's root container.\n   *\n   * @param template a Lit `TemplateResult` to render.\n   * @return The root container the template was rendered to.\n   */\n  render(template: TemplateResult) {\n    const root = this.createNewRoot();\n    litRender(template, root);\n    return root;\n  }\n\n  /**\n   * Creates a new root container for screenshot rendering and adds it to the\n   * body.\n   *\n   * Previous root containers will be hidden and displayed at the end of\n   * testing for easier debugging.\n   *\n   * @return A new root container.\n   */\n  private createNewRoot() {\n    const currentRoot = this.getCurrentRoot();\n    if (currentRoot) {\n      document.body.removeChild(currentRoot);\n    }\n\n    const root = document.createElement('div');\n    root.id = 'root';\n    root.style.display = 'inline-flex';\n    document.body.appendChild(root);\n    this.roots.push(root);\n    return root;\n  }\n\n  /**\n   * Get the current root container.\n   *\n   * @return The current root container or undefined is nothing as been rendered\n   *     yet.\n   */\n  protected getCurrentRoot(): HTMLElement|undefined {\n    return this.roots[this.roots.length - 1];\n  }\n}\n"]}