{"version":3,"file":"events.js","sourceRoot":"","sources":["events.ts"],"names":[],"mappings":"AAAA;;;;GAIG;AAEH;;;GAGG;AACH,MAAM,UAAU,UAAU,CACtB,OAAoB,EAAE,SAAiB;IACzC,OAAO,IAAI,OAAO,CAAC,CAAC,GAAG,EAAE,EAAE;QACzB,MAAM,QAAQ,GAAG,CAAC,CAAc,EAAE,EAAE;YAClC,OAAO,CAAC,mBAAmB,CAAC,SAAS,EAAE,QAAyB,CAAC,CAAC;YAClE,GAAG,CAAC,CAAC,CAAC,CAAC;QACT,CAAC,CAAC;QAEF,OAAO,CAAC,gBAAgB,CAAC,SAAS,EAAE,QAAyB,CAAC,CAAC;IACjE,CAAC,CAAC,CAAC;AACL,CAAC","sourcesContent":["/**\n * @license\n * Copyright 2022 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * Adds an event listener for `eventName` on the given element.\n * @return Promise that resolves when `eventName` has been fired on the element.\n */\nexport function listenOnce(\n    element: HTMLElement, eventName: string): Promise<CustomEvent> {\n  return new Promise((res) => {\n    const listener = (e: CustomEvent) => {\n      element.removeEventListener(eventName, listener as EventListener);\n      res(e);\n    };\n\n    element.addEventListener(eventName, listener as EventListener);\n  });\n}"]}