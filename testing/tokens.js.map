{"version":3,"file":"tokens.js","sourceRoot":"","sources":["tokens.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright 2022 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\n// import 'jasmine'; (google3-only)\n\nimport {CSSResult} from 'lit';\n\n/**\n * Create tests for `MdComponent.styles` that checks for undefined or unused\n * tokens.\n *\n * @param styles An array of `CSSResult`s to run tests on.\n */\nexport function createTokenTests(styles: CSSResult[]) {\n  it('should not have any undefined tokens', () => {\n    const undefinedTokens = getUndefinedTokens(styles);\n    expect(undefinedTokens).withContext('undefined tokens').toHaveSize(0);\n  });\n\n  it('should not have any unused tokens', () => {\n    const unusedTokens = getUnusedTokens(styles);\n    expect(unusedTokens).withContext('unused tokens').toHaveSize(0);\n  });\n}\n\n/**\n * Retrieves all undefined tokens. This method checks for any\n * `--_local-custom-property` that is used, but does not have a CSS style\n * declaration giving it a value.\n *\n * @example\n * :host {\n *   --_defined-token: 8px;\n *   border-radius: var(--_undefined-token);\n * }\n *\n * // returns ['--_undefined-token']\n *\n * @param styles An array of `CSSResult`s to get undefined tokens for.\n * @return An array of all token names that are undefined.\n */\nexport function getUndefinedTokens(styles: CSSResult[]) {\n  let defined = new Set<string>();\n  let used = new Set<string>();\n  for (const {styleSheet} of styles) {\n    if (!styleSheet) {\n      throw new Error('CSSResult.styleSheet is not supported.');\n    }\n\n    defined = new Set([...defined, ...getDefinedTokensFromRule(styleSheet)]);\n    used = new Set([...used, ...getUsedTokensFromRule(styleSheet)]);\n  }\n\n  const undefinedTokens: string[] = [];\n  for (const usedToken of used) {\n    if (!defined.has(usedToken)) {\n      undefinedTokens.push(usedToken);\n    }\n  }\n\n  return undefinedTokens;\n}\n\n/**\n * Retrieves all unused tokens. This method checks for any\n * `--_local-custom-property` that has a CSS declaration value, but it otherwise\n * unused.\n *\n * @example\n * :host {\n *   --_used-token: 8px;\n *   --_unused-token: 8px;\n *   border-radius: var(--_used-token);\n * }\n *\n * // returns ['--_unused-token']\n *\n * @param styles An array of `CSSResult`s to get unused tokens for.\n * @return An array of all token names that are unused.\n */\nexport function getUnusedTokens(styles: CSSResult[]) {\n  let defined = new Set<string>();\n  let used = new Set<string>();\n  for (const {styleSheet} of styles) {\n    if (!styleSheet) {\n      throw new Error('CSSResult.styleSheet is not supported.');\n    }\n\n    defined = new Set([...defined, ...getDefinedTokensFromRule(styleSheet)]);\n    used = new Set([...used, ...getUsedTokensFromRule(styleSheet)]);\n  }\n\n  const unusedTokens: string[] = [];\n  for (const definedToken of defined) {\n    if (!used.has(definedToken)) {\n      unusedTokens.push(definedToken);\n    }\n  }\n\n  return unusedTokens;\n}\n\nfunction getDefinedTokensFromRule(rule: CSSRule|CSSStyleSheet): Set<string> {\n  // Rule is either a CSSStylehSheet, CSSKeyframesRule, or one of the\n  // CSSGroupingRules.\n  if ('cssRules' in rule) {\n    let defined = new Set<string>();\n    for (const childRule of rule.cssRules) {\n      defined = new Set([...defined, ...getDefinedTokensFromRule(childRule)]);\n    }\n\n    return defined;\n  }\n\n  if (!(rule instanceof CSSStyleRule || rule instanceof CSSKeyframeRule)) {\n    return new Set();\n  }\n\n  const defined = new Set<string>();\n  for (const property of rule.style) {\n    if (property.startsWith('--_')) {\n      defined.add(property);\n    }\n  }\n\n  return defined;\n}\n\nfunction getUsedTokensFromRule(rule: CSSRule|CSSStyleSheet): Set<string> {\n  // Rule is either a CSSStylehSheet, CSSKeyframesRule, or one of the\n  // CSSGroupingRules.\n  if ('cssRules' in rule) {\n    let used = new Set<string>();\n    for (const childRule of rule.cssRules) {\n      used = new Set([...used, ...getUsedTokensFromRule(childRule)]);\n    }\n\n    return used;\n  }\n\n  if (!(rule instanceof CSSStyleRule || rule instanceof CSSKeyframeRule)) {\n    return new Set();\n  }\n\n  const used = new Set<string>();\n  // Shorthand properties are not included in CSSStyleDeclaration's iterator.\n  // Check them explicitly as well for properties like border-radius.\n  for (const property of [...rule.style, ...CSS_SHORTHAND_PROPERTIES]) {\n    const value = rule.style.getPropertyValue(property);\n    for (const match of value.matchAll(/--_[\\w-]+/g)) {\n      used.add(match[0]);\n    }\n  }\n\n  return used;\n}\n\n// https://developer.mozilla.org/en-US/docs/Web/CSS/Shorthand_properties#see_also\nconst CSS_SHORTHAND_PROPERTIES = [\n  'all',\n  'animation',\n  'background',\n  'border',\n  'border-block-end',\n  'border-block-start',\n  'border-bottom',\n  'border-color',\n  'border-image',\n  'border-inline-end',\n  'border-inline-start',\n  'border-left',\n  'border-radius',\n  'border-right',\n  'border-style',\n  'border-top',\n  'border-width',\n  'column-rule',\n  'columns',\n  'contain-intrinsic-size',\n  'flex',\n  'flex-flow',\n  'font',\n  'gap',\n  'grid',\n  'grid-area',\n  'grid-column',\n  'grid-row',\n  'grid-template',\n  'list-style',\n  'margin',\n  'mask',\n  'offset',\n  'outline',\n  'overflow',\n  'padding',\n  'place-content',\n  'place-items',\n  'place-self',\n  'scroll-margin',\n  'scroll-padding',\n  'scroll-timeline',\n  'text-decoration',\n  'text-emphasis',\n  'transition',\n];\n"]}